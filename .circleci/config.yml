version: 2.1

orbs:
  vault: contentful/vault@1

executors:
  linux-node:
    resource_class: xlarge
    docker:
      - image: cimg/node:18.15.0

cache-key: &cache-key
  key: dependency-cache-primary-{{ arch }}-yarn-packages-{{ checksum ".nvmrc" }}-{{ checksum "yarn.lock" }}

commands:
  yarn_install:
    steps:
      - restore_cache: *cache-key
      - vault/get-secrets:
          template-preset: 'semantic-release'
      - run: 'echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ~/.npmrc'
      - run: yarn install --prefer-offline --pure-lockfile
      - save_cache:
          <<: *cache-key
          paths:
            - ~/.cache/yarn

jobs:
  lint:
    executor: linux-node
    steps:
      - checkout
      - yarn_install
      - run: yarn lint
      - run: yarn tsc
      - run: yarn build
  unit-tests:
    executor: linux-node
    steps:
      - checkout
      - yarn_install
      - run: yarn build
      - run: yarn test:ci

  release:
    executor: linux-node
    steps:
      - checkout
      - vault/get-secrets:
          template-preset: 'semantic-release'
      - yarn_install
      - vault/configure-lerna
      - run: echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > ~/.npmrc
      - run: yarn build # This should not be needed, but without it it will not contain any files
      - run: yarn lerna version --no-private --conventional-commits --create-release
          github --yes
      - run: yarn lerna publish from-git --yes

  prerelease:
    executor: linux-node
    steps:
      - checkout
      - vault/get-secrets:
          template-preset: 'semantic-release'
      - yarn_install
      - vault/configure-lerna
      - run: echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > ~/.npmrc
      - run: yarn build # This should not be needed, but without it it will not contain any files
      - run: yarn lerna version --no-private --conventional-commits --conventional-prerelease
      - run: yarn lerna publish from-git --yes

workflows:
  version: 2
  # run on every commit
  commit:
    jobs:
      - lint:
          context: vault
      - unit-tests:
          context: vault
      - prerelease:
          context: vault
          filters:
            branches:
              only: canary
          requires:
            - lint
            - unit-tests
      - release:
          context: vault
          filters:
            branches:
              only: main
          requires:
            - lint
            - unit-tests
